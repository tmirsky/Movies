# Generated by Django 4.1.3 on 2022-11-07 21:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Полное имя')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Дата рождения')),
                ('place', models.CharField(max_length=50, null=True, verbose_name='Страна')),
                ('personal_foto', models.ImageField(upload_to='actors/', verbose_name='Фотография')),
                ('biography', models.CharField(max_length=500, verbose_name='Биография')),
                ('masterpiece', models.CharField(max_length=500, null=True, verbose_name='Лучшие работы')),
                ('award_link', models.URLField(default=None, max_length=500, null=True, verbose_name='Достижения')),
            ],
            options={
                'verbose_name': 'Актер',
                'verbose_name_plural': 'Актеры',
                'db_table': 'actors',
            },
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Полное имя')),
                ('date_of_birth', models.DateField(null=True, verbose_name='Дата рождения')),
                ('place', models.CharField(max_length=50, null=True, verbose_name='Страна')),
                ('personal_foto', models.ImageField(upload_to='actors/', verbose_name='Фотография')),
                ('biography', models.CharField(max_length=500, verbose_name='Биография')),
                ('masterpiece', models.CharField(max_length=500, null=True, verbose_name='Лучшие работы')),
                ('award_link', models.URLField(default=None, max_length=500, null=True, verbose_name='Достижения')),
            ],
            options={
                'verbose_name': 'Режиссер',
                'verbose_name_plural': 'Режиссеры',
                'db_table': 'director',
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Название фильма')),
                ('tagline', models.CharField(max_length=100, verbose_name='Название фильма')),
                ('description', models.TextField(max_length=1000, verbose_name='Описание')),
                ('poster', models.ImageField(upload_to='movies/', verbose_name='Постер')),
                ('year', models.DateField(verbose_name='Дата выхода фильма')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Оценка')),
                ('metascore', models.IntegerField(blank=True, default=None, verbose_name='Рейтинг Metascore')),
                ('country', models.CharField(max_length=30, verbose_name='Страна')),
                ('budget', models.PositiveIntegerField(default=0, help_text='указывать сумму в долларах', verbose_name='Бюджет')),
                ('fess_in_world', models.PositiveIntegerField(default=0, help_text='указывать сумму в долларах', verbose_name='Сборы в мире')),
                ('duration', models.IntegerField(blank=True, help_text='указывать в минутах', null=True, verbose_name='Продолжительность')),
                ('genres', models.CharField(max_length=27, verbose_name='Жанр')),
                ('url', models.SlugField(unique=True, verbose_name='URL')),
                ('is_published', models.BooleanField(default=False, verbose_name='Опубликован')),
                ('actors', models.ManyToManyField(related_name='film_actor', to='movies.actor', verbose_name='актеры')),
                ('directors', models.ManyToManyField(related_name='film_director', to='movies.director', verbose_name='режиссер')),
            ],
            options={
                'verbose_name': 'Фильм',
                'verbose_name_plural': 'Фильмы',
                'db_table': 'movies',
                'ordering': ['title', '-year'],
            },
        ),
    ]
